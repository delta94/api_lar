-- Users

SELECT id, uuid, name, email, password, sex as gender, phone, birthday, NULL as sub_email, avatar, address, owner, facebook as facebook_id, null as google_id, level, 0 as point, money, null as passport_last_name, null as passport_first_name, null as passport_infomation, id_card1 as passport_front_card, id_card2 as passport_back_card, null as account_number, city_id, district_id, type, 1 as status, sale_id, remember_token, deleted_at, created_at, updated_at from users;

-- Rooms 
SELECT id, client_id as merchant_id, number_people as max_guest, null as max_additional_guest, number_bed, bedroom as number_room, city_id, district_id, type as room_type, checkin, checkout, price_by_day as price_day, price_block as price_hour, price_by_hour as price_after_hour, additional_guest as price_charge_guest, cleaning_fee, standard_point, is_manager, hot, 0 as new, is_last_mile as latest_deal, by_time as rent_type, null as rules, longitude, latitude,(select count(*) from booking where booking.room_id = rooms.id and booking.payment_status IN (3, 4) AND booking.STATUS = 4) as total_booking, 0 as avg_cleanliness, 0 as avg_service,0 as avg_quality,0 as avg_valuable, 0 as avg_avg_rating, '{"refunds":[{"days":7,"amount":100}],"no_booking_cancel":0}' as settings, 0 as total_review, null as airbnb_calendar, null as total_recommend, 20 as comission, 0 as percent, status, sale_id, deleted_at, created_at, updated_at FROM `rooms`;

-- Room_Translates

SELECT room_translates.locale as lang , room_id,any_value(name) as name,(SELECT rooms.address from rooms where rooms.id = room_translates.room_id) as address, any_value(note) as note, any_value(space) as space, any_value(description) as description, any_value(deleted_at) as deleted_at, any_value(created_at) as created_at, any_value(updated_at) as updated_at FROM `room_translates` GROUP by room_id,locale;

-- Room_Medias

SELECT id, room_id, source AS image, 1 AS status, 3 AS type, NULL AS deleted_at, created_at, updated_at FROM media_room;

-- Comforts (Only Vietnamese)

select id, `created_at`, `updated_at` from comforts where locale = 'vi';

-- Comforts -> Comfort_Translates (Only Vietnamese)

select id as `comfort_id`, `name`, `description`, `created_at`, `updated_at`,'vi' as `lang` from comforts where locale = 'vi';

-- Room Comforts (Only Vietnamese)

select * from room_comforts where comfort_id in (select id from comforts where locale = 'vi');

-- Bookings

SELECT any_value(booking.id) as id , any_value(booking.uuid) as uuid, any_value(booking.code) as code, any_value(booking.name) as name, any_value(booking.phone) as phone, any_value(ask_room_log.sex) as sex, any_value(ask_room_log.birthday) as birthday, any_value(booking.email) as email, any_value(booking.email_receive) as email_received, any_value(booking.name_receive) as name_received, any_value(booking.phone_receive) as phone_received, any_value(booking.room_id) as room_id, any_value(booking.customer_id) as customer_id, any_value(booking.client_id) as merchant_id, any_value(booking.checkin) as checkin, any_value(booking.checkout) as checkout, any_value(booking.price_original) as price_original, any_value(booking.discount) as price_discount, null as coupon, any_value(booking.note) as note, any_value(booking.total_fee) as total_fee, any_value(booking.status) as status, any_value(booking.number_of_guests) as number_of_guests, any_value(booking.service_fee) as service_fee, 0 as additional_fee, 0 as coupon_discount, any_value(booking.type) as type, any_value(ask_room_log.price_range) as price_range, any_value(booking.type_booking) as booking_type, any_value(booking.payment_method) as payment_method, any_value(booking.payment_status) as payment_status, any_value(ask_room_log.contact_channel) as source, any_value(booking.exchange_rate) as exchange_rate,null as age_range,
0 as total_refund, '{"refunds":[{"days":7,"amount":100}],"no_booking_cancel":0}' as settings, any_value(booking.deleted_at) as deleted_at, any_value(booking.created_at) as created_at, any_value(booking.updated_at) as updated_at FROM `booking` left join ask_room_log on booking.created_at = ask_room_log.created_at group by booking.uuid;

-- Cities

SELECT id,region_id,name,short_name,code,longitude,latitude,priority,0 as hot,allow as status, deleted_at, created_at,updated_at FROM `cities`;

-- Districts

SELECT id,city_id,name,short_name,code,kind_from,kind_to,0 as hot,0 as priority,1 as status,deleted_at,created_at,updated_at FROM `districts`;

-- Payment Histories
select booking_id, total_received, total_debt,note, (status - 1) as status, confirm, created_at, updated_at  from payment_histories where status <> 4;

-- Update Room percent

update rooms set percent = 100 where status = 1